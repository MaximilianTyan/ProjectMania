plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

// vvv Of interest vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    // Mod dependencies
    maven { url = "https://api.modrinth.com/maven"}  // Modrinth mods sources
    maven { url = 'https://maven.parchmentmc.org' } // Parchment mappings (replacing Yarn)

    // Create dependencies
    maven { url = "https://cursemaven.com"} // Forge Config API Port
    maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
    maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://maven.tterrag.com/" } // Flywheel
}

dependencies {
    // Base game
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    // Mappings provider
    mappings loom.layered() {
        it.officialMojangMappings()
//        it.mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
        it.parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${parchment_version}@zip")
    }

    // Fabric mod loader and API
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // Mod Dependencies
    modImplementation "maven.modrinth:open-parties-and-claims:fabric-${project.minecraft_version}-${open_pac_version}"
//    modImplementation "maven.modrinth:forge-config-api-port:v${forge_config_port_version}-${project.minecraft_version}-Fabric"
    modImplementation "com.simibubi.create:create-fabric-${project.minecraft_version}:${create_version}+mc${project.minecraft_version}"

}

// ^^^ Of interest ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

loom {
    splitEnvironmentSourceSets()

    mods {
        "zondayland" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

fabricApi {
    configureDataGeneration()
}

processResources {
    inputs.property "version", project.version

    filesMatching("src/**") {
        expand (mod_id: "${mod_id}",
                minecraft_version: "${minecraft_version}",
                forge_config_port_version: "${forge_config_port_version}",
                version: project.version)
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}